{"ast":null,"code":"var _jsxFileName = \"/Users/arshedke/goprojects/stream-service/frontend/src/components/Dashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport MovieItem from './MovieItem';\nimport Navbar from './Navbar';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [username, setUsername] = useState(\"\");\n  const fetched = useRef(false); // useRef prevents fetching api multiple time\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (fetched.current) return;\n    fetched.current = true;\n    fetch(\"http://localhost:3001/api/login\", {\n      method: \"GET\",\n      credentials: \"include\" // Ensures cookies are sent\n    }).then(response => response.json()).then(data => {\n      if (!data.username) {\n        navigate('/');\n      } else {\n        setUsername(data.username || \"Try Logging in First\");\n      }\n    }).catch(error => console.error(\"Error fetching session:\", error));\n  }, [navigate]);\n  fetchMovie = _s(() => {\n    _s();\n    const [items, setItems] = useState([]);\n    useEffect(() => {\n      const url = \"http://localhost:3001/api/getmovie\";\n      fetch(url).then(response => response.json()).then(data => setItems(data)).catch(error => console.error(\"Error fetching data:\", error));\n    });\n  }, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Hello \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s2(Dashboard, \"Kf3Nbr9Y867lbMo7qzeoD7yqduI=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","MovieItem","Navbar","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s2","_s","$RefreshSig$","username","setUsername","fetched","navigate","current","fetch","method","credentials","then","response","json","data","catch","error","console","fetchMovie","items","setItems","url","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arshedke/goprojects/stream-service/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport MovieItem from './MovieItem'\nimport Navbar from './Navbar';\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Dashboard() {\n    const [username, setUsername] = useState(\"\")\n    const fetched = useRef(false) // useRef prevents fetching api multiple time\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if (fetched.current) return;\n        fetched.current = true\n\n        fetch(\"http://localhost:3001/api/login\", {\n            method: \"GET\",\n            credentials: \"include\", // Ensures cookies are sent\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                if (!data.username) {\n                    navigate('/')\n                } else {\n                    setUsername(data.username || \"Try Logging in First\");\n                }\n            })\n            .catch((error) => console.error(\"Error fetching session:\", error));\n    }, [navigate]);\n\n    fetchMovie = () => {\n        const [items, setItems] = useState([])\n\n        useEffect(() => {\n            const url = \"http://localhost:3001/api/getmovie\"\n            fetch(url)\n                .then((response) => response.json())\n                .then((data) => setItems(data))\n                .catch((error) => console.error(\"Error fetching data:\", error));\n        })\n    }\n\n    return (\n        <>\n            <Navbar />\n            <h3>Hello {username}</h3>\n            <MovieItem />\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMe,OAAO,GAAGd,MAAM,CAAC,KAAK,CAAC,EAAC;EAC9B,MAAMe,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BL,SAAS,CAAC,MAAM;IACZ,IAAIgB,OAAO,CAACE,OAAO,EAAE;IACrBF,OAAO,CAACE,OAAO,GAAG,IAAI;IAEtBC,KAAK,CAAC,iCAAiC,EAAE;MACrCC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS,CAAE;IAC5B,CAAC,CAAC,CACGC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAI,CAACA,IAAI,CAACX,QAAQ,EAAE;QAChBG,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,MAAM;QACHF,WAAW,CAACU,IAAI,CAACX,QAAQ,IAAI,sBAAsB,CAAC;MACxD;IACJ,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEdY,UAAU,GAAAjB,EAAA,CAAG,MAAM;IAAAA,EAAA;IACf,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;IAEtCD,SAAS,CAAC,MAAM;MACZ,MAAMgC,GAAG,GAAG,oCAAoC;MAChDb,KAAK,CAACa,GAAG,CAAC,CACLV,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKM,QAAQ,CAACN,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IACvE,CAAC,CAAC;EACN,CAAC;EAED,oBACIpB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACI1B,OAAA,CAACH,MAAM;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV9B,OAAA;MAAA0B,QAAA,GAAI,QAAM,EAACnB,QAAQ;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzB9B,OAAA,CAACJ,SAAS;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACf,CAAC;AAEX;AAAC1B,GAAA,CA3CuBD,SAAS;EAAA,QAGZL,WAAW;AAAA;AAAAiC,EAAA,GAHR5B,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}